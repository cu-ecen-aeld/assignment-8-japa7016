#!/bin/sh



choose_group() 
{
    if grep -q '^staff:' /etc/group; then
        echo "staff"
    else
        echo "wheel"
    fi
}

load_mod() 
{
    local modName="$1"
    local modFile="$2"  # e.g. /lib/modules/$(uname -r)/extra/aesdchar.ko
    local foundMajor

    # Try modprobe first (if your module is installed in /lib/modules)
    # If that fails, fall back to insmod with a local .ko file
    if ! modprobe "$modName" 2>/dev/null; then
        echo "modprobe $modName failed, trying insmod $modFile"
        insmod "$modFile" || exit 1
    fi

    # Find the major number from /proc/devices
    foundMajor=$(awk '$2=="'"$modName"'" {print $1}' /proc/devices)
    [ -z "$foundMajor" ] && return

    # Remove old node if any
    rm -f /dev/"$modName"

    # Create the device node with major=<foundMajor>, minor=0
    mknod /dev/"$modName" c "$foundMajor" 0

    # Set group/permissions
    chgrp "$MAIN_GROUP" /dev/"$modName"
    chmod 664 /dev/"$modName"
}

unload_mod() 
{
    local modName="$1"
    # Attempt to remove the module
    if ! modprobe -r "$modName" 2>/dev/null; then
        echo "modprobe -r $modName failed, trying rmmod"
        rmmod "$modName" || exit 1
    fi

    # Remove the device node
    rm -f /dev/"$modName"
}

MAIN_GROUP=$(choose_group)


[ $# -eq 1 ] || 
{
    echo "Usage: $0 {start|stop}"
    exit 1
}

case "$1" in
    start)
        echo "Loading aesdchar module..."
        load_mod aesdchar /path/to/aesdchar.ko
        ;;
    stop)
        echo "Unloading aesdchar module..."
        unload_mod aesdchar
        ;;
    *)
        echo "Usage: $0 {start|stop}"
        exit 1
        ;;
esac

exit 0
